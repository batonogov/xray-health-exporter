name: üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ

on:
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened]
  push:
    branches:
      - main

jobs:
  test:
    name: üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write

    steps:
      - name: üì• Checkout –∫–æ–¥–∞
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'
          cache: true

      - name: üì¶ –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
        run: go mod download

      - name: üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        run: |
          if [ -n "$(gofmt -s -l .)" ]; then
            echo "‚ùå –ö–æ–¥ –Ω–µ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ 'go fmt ./...'"
            gofmt -s -l .
            exit 1
          fi
          echo "‚úÖ –ö–æ–¥ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ"

      - name: üèóÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–±–æ—Ä–∫–∏
        run: |
          echo "üî® –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞..."
          go build -v -o xray-health-exporter .
          echo "‚úÖ –°–±–æ—Ä–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ"

      - name: üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
        run: |
          echo "üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º..."
          go test -v -race -coverprofile=coverage.out -covermode=atomic ./...

      - name: üìä –ê–Ω–∞–ª–∏–∑ –ø–æ–∫—Ä—ã—Ç–∏—è
        id: coverage
        run: |
          echo "üìä –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ –æ –ø–æ–∫—Ä—ã—Ç–∏–∏..."
          go tool cover -func=coverage.out > coverage.txt

          # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –æ–±—â–µ–≥–æ –ø—Ä–æ—Ü–µ–Ω—Ç–∞ –ø–æ–∫—Ä—ã—Ç–∏—è
          COVERAGE=$(go tool cover -func=coverage.out | grep total | awk '{print $3}' | sed 's/%//')
          echo "coverage=$COVERAGE" >> $GITHUB_OUTPUT
          echo "üìä –û–±—â–µ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ: $COVERAGE%"

          # –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ –ø–æ—Ä–æ–≥–∞
          THRESHOLD=65
          if (( $(echo "$COVERAGE < $THRESHOLD" | bc -l) )); then
            echo "‚ùå –ü–æ–∫—Ä—ã—Ç–∏–µ ($COVERAGE%) –Ω–∏–∂–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ –ø–æ—Ä–æ–≥–∞ ($THRESHOLD%)"
            exit 1
          fi
          echo "‚úÖ –ü–æ–∫—Ä—ã—Ç–∏–µ ($COVERAGE%) –≤—ã—à–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ –ø–æ—Ä–æ–≥–∞ ($THRESHOLD%)"

      - name: üìù –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ –æ –ø–æ–∫—Ä—ã—Ç–∏–∏
        if: github.event_name == 'pull_request'
        run: |
          echo "## üìä –û—Ç—á–µ—Ç –æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏" > coverage_report.md
          echo "" >> coverage_report.md
          echo "### ‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–æ–≤" >> coverage_report.md
          echo "" >> coverage_report.md
          echo "- **–û–±—â–µ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ:** ${{ steps.coverage.outputs.coverage }}%" >> coverage_report.md
          echo "- **–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –ø–æ—Ä–æ–≥:** 65%" >> coverage_report.md
          echo "- **–°—Ç–∞—Ç—É—Å:** üü¢ –ü—Ä–æ–π–¥–µ–Ω–æ" >> coverage_report.md
          echo "" >> coverage_report.md
          echo "### üìã –ü–æ–∫—Ä—ã—Ç–∏–µ –ø–æ —Ñ—É–Ω–∫—Ü–∏—è–º" >> coverage_report.md
          echo "" >> coverage_report.md
          echo "\`\`\`" >> coverage_report.md
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –≤ —Ñ–∞–π–ª–µ
          LINES=$(wc -l < coverage.txt)
          if [ "$LINES" -le 25 ]; then
            # –ï—Å–ª–∏ —Å—Ç—Ä–æ–∫ –º–∞–ª–æ, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å—ë
            cat coverage.txt >> coverage_report.md
          else
            # –ï—Å–ª–∏ —Å—Ç—Ä–æ–∫ –º–Ω–æ–≥–æ, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 20 –∏ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 –±–µ–∑ –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏—è
            head -20 coverage.txt >> coverage_report.md
            echo "..." >> coverage_report.md
            tail -5 coverage.txt >> coverage_report.md
          fi
          echo "\`\`\`" >> coverage_report.md
          echo "" >> coverage_report.md
          echo "---" >> coverage_report.md
          echo "ü§ñ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ GitHub Actions" >> coverage_report.md

      - name: üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –≤ PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const coverage = '${{ steps.coverage.outputs.coverage }}';

            let emoji = 'üü¢';
            if (parseFloat(coverage) < 70) emoji = 'üü°';
            if (parseFloat(coverage) < 65) emoji = 'üî¥';

            const body = fs.readFileSync('coverage_report.md', 'utf8');

            // –ü–æ–∏—Å–∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const botComment = comments.data.find(comment =>
              comment.user.type === 'Bot' &&
              comment.body.includes('üìä –û—Ç—á–µ—Ç –æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏')
            );

            if (botComment) {
              // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: body
              });
            } else {
              // –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: body
              });
            }

      - name: üì§ –ó–∞–≥—Ä—É–∑–∫–∞ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: |
            coverage.out
            coverage.txt
          retention-days: 30

      - name: üìã –ò—Ç–æ–≥–∏
        if: always()
        run: |
          echo "## üìã –ò—Ç–æ–≥–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **–ü–æ–∫—Ä—ã—Ç–∏–µ –∫–æ–¥–∞:** ${{ steps.coverage.outputs.coverage }}%" >> $GITHUB_STEP_SUMMARY
          echo "- **–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:** ‚úÖ –ü—Ä–æ–π–¥–µ–Ω–æ" >> $GITHUB_STEP_SUMMARY
          echo "- **–°–±–æ—Ä–∫–∞:** ‚úÖ –£—Å–ø–µ—à–Ω–æ" >> $GITHUB_STEP_SUMMARY
          echo "- **–¢–µ—Å—Ç—ã:** ‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã" >> $GITHUB_STEP_SUMMARY
